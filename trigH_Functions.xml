<?xml version="1.0" encoding="utf-8"?>
<user_transforms>
	<transform_def name="trigH_Functions">
		<node name="input_params">
			<real name="trigH_Functions">1</real>
			<real name="trigH_Functions_Func"minval="0"maxval="1">1</real>
			<real name="trigH_Functions_HexSquare"minval="0"maxval="1">1</real>
		</node>

		<node name="internal_params">
			<real name="weight" />
			<real name="func" />
			<real name="hs" />
		</node>

		<int name="num_unit_randoms">2</int>

		<string name="winter_init_function">
			<![CDATA[
				let
					hs = if(trigH_Functions_HexSquare > 0.0, pi() / 3, pi() / (2.0 * sqrt3()))
				in
					trigH_Functions_init_result(trigH_Functions, trigH_Functions_Func * 6.0, hs)
			]]>
		</string>

		<string name="winter_eval_function">
			<![CDATA[
				let
					z = complex(p_in.x, p_in.y) * hs
					sinhz = 0.5 * (-exp(-z) + exp(z))
					coshz = (exp(-z) + exp(z)) * 0.5
					tanhz = exp(z) / (exp(-z) + exp(z)) - exp(-z) / (exp(-z) + exp(z))
					cothz = (exp(-z) + exp(z)) / (exp(z) - exp(-z))
					sechz = 2.0 * exp(z) / (exp(2.0 * z) + 1.0)
					cschz = 2.0 / (exp(z) - exp(-z))
					function = if(func < 1.0, sinhz, if(func < 2.0, coshz, if(func < 3.0, tanhz, if(func < 4.0, cothz, if(func < 5.0, sechz, cschz)))))
				in
					toVec2(function) * weight
			]]>
		</string>
	</transform_def>


</user_transforms>
