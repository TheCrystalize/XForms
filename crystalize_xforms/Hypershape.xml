<?xml version="1.0" encoding="utf-8"?>
<user_transforms>
	<transform_def name="hypershape">
		<!-- Put together by Crystalize, based on work by zy0rg and Undefined -->
		<node name="input_params">
			<real name="hypershape">1</real>
			<real name="hypershape_n"minval="3">3</real>
		</node>

		<node name="internal_params">
			<real name="weight" />
			<real name="alpha" />
			<real name="alphacoeff" />
			<real name="beta" />
		</node>

		<int name="num_unit_randoms">2</int>

		<string name="winter_init_function">
			<![CDATA[
				let
					n = floor(hypershape_n)
					alpha = twopi() / n
					alphacoeff = tan(alpha * 0.5) * 2.0
					beta = sqrt2() * cos(alpha * 0.5)
				in
					hypershape_init_result(hypershape, alpha, alphacoeff, beta)
			]]>
		</string>

		<string name="winter_eval_function">
			<![CDATA[
				let
					da = (atan2(p_in.y, p_in.x) + pi()) / alpha
					rad = length(p_in)
					za0 = floor(da)
					xa0 = da - za0
					xa1 = if(xa0 > 0.5, 1.0 - xa0, xa0)
					za = if(xa0 > 0.5, za0 + 1.0, za0)
					si = if(xa0 > 0.5, -1.0, 1.0)
					xa = atan(xa1 * alphacoeff) / alpha
					co = beta / cos(xa * alpha)
					ang = (za + si * xa) * alpha - pi()

					p = vec2(cos(ang), sin(ang)) * (co * rad)
					r = dot(p, p)
				in
					(p * (sqrt2() - sqrt(2.0 - r)) / r) * weight
			]]>
		</string>
	</transform_def>


</user_transforms>
